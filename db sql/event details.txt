---------------------------------------------------------------event details
create table event_details(
id varchar2(20) primary key,
name varchar2(50) not null,
event_date date not null,
type number not null,
est_budget number,
actual_budget number
);



----------------------------event id generate
CREATE OR REPLACE FUNCTION GET_EVENT_id(F_DATE DATE,f_type number)
RETURN varchar2
IS
d_ID varchar2(20);
id varchar2(20);
vv number;
dd varchar2(10);
types varchar2(5);

BEGIN
SELECT  max(ID) INTO d_ID FROM event_details;
if f_type=1 then types:='F_Ev';
elsif f_type=2 then types:='H_Ev';
end if;
dbms_output.put_line(f_date);
select substr(to_char(f_date,'YYYYMMDD'),3,4) into dd from dual;

 dbms_output.put_line(dd);


IF d_ID IS NULL --- Does not exist
THEN
    id :=  dd || '10001' ;

ELSE
select max(substr(id,-5)) into vv from event_details ;
    vv := vv + 1;
	id :=  dd || to_char(vv);

END IF;

RETURN NVL( (types || id) , -1); --- -1 IS THE ERROR FLAG

END;
/




--- Calling this from a trigger

CREATE OR REPLACE TRIGGER TRG_GEN_EVENT_ID
BEFORE INSERT ON event_details
FOR EACH ROW
BEGIN

:NEW.ID := GET_EVENT_id(:NEW.event_date,:new.type);

END;
/

